{"version":3,"sources":["components/Login.js","components/Game.js","components/Instructions.js","components/Leaderboard.js","components/Menu.js","components/Results.js","components/App.js","index.js"],"names":["Login","react_default","a","createElement","Game","Instructions","Leaderboard","Menu","Results","App","state","playerName","playerNameReady","tie","win","lose","id","windowWidth","windowHeight","recoveryDataExists","_React$createElement","className","react_router","exact","path","Object","defineProperty","props","components_Login","render","components_Game","components_Menu","components_Instructions","components_Leaderboard","components_Results","Component","ReactDOM","react_router_dom","components_App","document","getElementById"],"mappings":"sOAMeA,EAJD,WACV,OAAOC,EAAAC,EAAAC,cAAA,qBCGIC,EAJF,WACT,OAAOH,EAAAC,EAAAC,cAAA,oBCGIE,EAJM,WACjB,OAAOJ,EAAAC,EAAAC,cAAA,4BCGIG,EAJK,WAChB,OAAOL,EAAAC,EAAAC,cAAA,2BCGII,EAJF,WACT,OAAON,EAAAC,EAAAC,cAAA,oBCIIK,EAJC,WACZ,OAAOP,EAAAC,EAAAC,cAAA,uBC+JIM,6MA/IXC,MAAQ,CACJC,WAAY,GACZC,iBAAiB,EACjBC,IAAK,EACLC,IAAK,EACLC,KAAM,EACNC,GAAI,GACJC,YAAa,EACbC,aAAc,EACdC,oBAAoB,2EA0Ef,IAAAC,EAIL,OAEInB,EAAAC,EAAAC,cAAA,OAAKkB,UAAU,OACXpB,EAAAC,EAAAC,cAAA,OAAKkB,UAAU,cACXpB,EAAAC,EAAAC,cAACmB,EAAA,GAADF,EAAA,CAAOG,OAAK,EAACC,KAAK,KAAlBC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,YAAAK,OAAAC,EAAA,EAAAD,CAAAL,EAAA,SAAoC,SAACO,GAAD,OAChC1B,EAAAC,EAAAC,cAACyB,EAAD,QADJR,IAWAnB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAOE,KAAK,QAAQD,OAAK,EAACM,OAAQ,SAACF,GAAD,OAC9B1B,EAAAC,EAAAC,cAAC2B,EAAD,SAeJ7B,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAOE,KAAK,QAAQD,OAAK,EAACM,OAAQ,SAACF,GAAD,OAC9B1B,EAAAC,EAAAC,cAAC4B,EAAD,SAKJ9B,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAOE,KAAK,gBAAgBD,OAAK,EAACM,OAAQ,SAACF,GAAD,OAAY1B,EAAAC,EAAAC,cAAC6B,EAAD,SACtD/B,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAOE,KAAK,eAAeD,OAAK,EAACM,OAAQ,SAACF,GAAD,OAAY1B,EAAAC,EAAAC,cAAC8B,EAAD,SACrDhC,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAOE,KAAK,WAAWD,OAAK,EAACM,OAAQ,SAACF,GAAD,OACjC1B,EAAAC,EAAAC,cAAC+B,EAAD,kBAhINC,aCZlBC,IAASP,OACL5B,EAAAC,EAAAC,cAACkC,EAAA,EAAD,KACIpC,EAAAC,EAAAC,cAACmC,EAAD,OAERC,SAASC,eAAe","file":"static/js/main.385c63db.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nconst Login = () => {\n    return <div>Login</div>;\n}\n\nexport default Login;   ","import React, { Component } from \"react\";\n\nconst Game = () => {\n    return <div>Game</div>;\n}\n\nexport default Game;","import React, { Component } from \"react\";\n\nconst Instructions = () => {\n    return <div>Instructions</div>;\n}\n\nexport default Instructions;\n\n","import React, { Component } from \"react\";\n\nconst Leaderboard = () => {\n    return <div>Leaderboard</div>;\n}\n\nexport default Leaderboard;\n","import React, { Component } from \"react\";\n\nconst Menu = () => {\n    return <div>Menu</div>;\n}\n\nexport default Menu;","import React, { Component } from \"react\";\n\n\nconst Results = () => {\n    return <div>Results</div>;\n}\n\nexport default Results;","import React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\n\nimport Login from './Login';\nimport Game from './Game';\nimport Instructions from './Instructions';\nimport Leaderboard from './Leaderboard';\nimport Menu from './Menu';\nimport Results from './Results';\n\n// import background from '../backgroundImage/background.png';\n// import options from '../utils/options';\n// import firebase from '../database/firebase/firebase';\n// import history from '../utils/history';\n\n\n// const dbRef = firebase.database().ref();\n\nclass App extends Component {\n    state = {\n        playerName: '',\n        playerNameReady: false,\n        tie: 0,\n        win: 0,\n        lose: 0,\n        id: '',\n        windowWidth: 0,\n        windowHeight: 0,\n        recoveryDataExists: false,\n    }\n\n    // componentDidMount() {\n    //     this.updateWindow();\n    //     window.addEventListener(\"resize\", this.updateWindow);\n    // }\n\n    // updateWindow = () => {\n    //     this.setState({\n    //         windowWidth: window.innerWidth,\n    //         windowHeight: window.innerHeight\n    //     });\n    // }\n\n    // handleChange = (e, testValue) => {\n    //     this.setState({ [e.target.id]: e.target.value }, () => testValue());\n    // }\n\n    // checkForPlayerNameReady = () => {\n    //     if (\n    //         this.state.playerName !== \"Enter a nickname\"\n    //         && this.state.playerName !== \"\"\n    //         && this.state.playerName !== \" \"\n    //         && this.state.playerName !== \"  \"\n    //         && this.state.playerName !== \"   \"\n    //     ) {\n    //         this.setState({ playerNameReady: true });\n    //     } else {\n    //         this.setState({ playerNameReady: false });\n    //     }\n    // }\n\n    // handleNewPlayerFormSubmit = (e) => {\n    //     e.preventDefault();\n    //     this.addNewPlayerToFirebase();\n    // }\n\n    // addNewPlayerToFirebase = () => {\n    //     const newPlayer = {\n    //         name: this.state.playerName,\n    //         win: this.state.win,\n    //         lose: this.state.lose,\n    //         tie: this.state.tie\n    //     }\n    //     dbRef.push(newPlayer).then((snap) => {\n    //         this.setState({ id: snap.key });\n    //     });\n    // }\n\n    // updateFirebase = (type) => {\n    //     dbRef.child(this.state.id).child(type).set(this.state[type]);\n    // }\n\n    // updateCount = (type) => {\n    //     this.setState({ [type]: this.state[type] + 1 }, () => this.updateFirebase(type));\n    // }\n\n    // setRecoveryDataState = () => {\n    //     this.setState({ recoveryDataExists: true });\n    // }\n\n    // resetGame = () => {\n    //     this.setState({\n    //         playerName: '',\n    //         playerNameReady: false,\n    //         tie: 0,\n    //         win: 0,\n    //         lose: 0,\n    //         id: '',\n    //         recoveryDataExists: '',\n    //     });\n    // }\n\n    render() {\n        // const backgroundImg = {\n        //     backgroundImage: `linear-gradient(to bottom, rgba(205, 169, 157, 0.7), rgba(205, 169, 157, 0.7)), url(${background})`\n        // }\n        return (\n            // <div>App</div>\n            <div className=\"app\" >\n                <div className=\"appWrapper\">\n                    <Route exact path=\"/\" exact render={(props) => (\n                        <Login\n                            // history={history}\n                            // playerName={this.state.playerName}\n                            // playerNameReady={this.state.playerNameReady}\n                            // handleChange={this.handleChange}\n                            // handleNewPlayerFormSubmit={this.handleNewPlayerFormSubmit}\n                            // addNewPlayerToFirebase={this.addNewPlayerToFirebase}\n                            // checkForPlayerNameReady={this.checkForPlayerNameReady}\n                        />)}\n                    />\n                    <Route path=\"/game\" exact render={(props) => (\n                        <Game\n                            // history={history}\n                            // playerName={this.state.playerName}\n                            // updateCount={this.updateCount}\n                            // windowWidth={this.state.windowWidth}\n                            // windowHeight={this.state.windowHeight}\n                            // id={this.state.id}\n                            // setRecoveryDataState={this.setRecoveryDataState}\n                            // tie={this.state.tie}\n                            // win={this.state.win}\n                            // lose={this.state.lose}\n                            // recoveryDataExists={this.state.recoveryDataExists}\n\n                        />)}\n                    />\n                    <Route path=\"/menu\" exact render={(props) => (\n                        <Menu\n                            // recoverCurrentGameData={this.recoverCurrentGameData}\n                            // resetGame={this.resetGame}\n                        />)}\n                    />\n                    <Route path=\"/instructions\" exact render={(props) => (<Instructions />)} />\n                    <Route path=\"/leaderboard\" exact render={(props) => (<Leaderboard />)} />\n                    <Route path=\"/results\" exact render={(props) => (\n                        <Results\n                            // resetGame={this.resetGame}\n                            // tieCount={this.state.tie}\n                            // playerWinCount={this.state.win}\n                            // compWinCount={this.state.lose}\n                            // playerName={this.state.playerName}\n                            // history={history}\n                        />)}\n                    />\n                </div>\n            </div>\n        );\n    };\n}\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from \"react-router-dom\";\n\nimport App from './components/App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}