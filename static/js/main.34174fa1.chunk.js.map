{"version":3,"sources":["components/Login.js","components/Game.js","components/Instructions.js","components/Leaderboard.js","components/Menu.js","components/Results.js","database/firebase/firebase.js","components/App.js","utils/history.js","index.js","backgroundImage/background.png"],"names":["Login","react_default","a","createElement","Game","Instructions","Leaderboard","Menu","Results","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","dbRef","createBrowserHistory","database","ref","App","state","playerName","playerNameReady","tie","win","lose","id","windowWidth","windowHeight","recoveryDataExists","updateWindow","_this","setState","window","innerWidth","innerHeight","handleChange","e","testValue","Object","defineProperty","target","value","checkForPlayerNameReady","handleNewPlayerFormSubmit","preventDefault","addNewPlayerToFirebase","newPlayer","name","push","then","snap","key","updateFirebase","type","child","set","updateCount","setRecoveryDataState","resetGame","this","addEventListener","_React$createElement","backgroundImg","backgroundImage","concat","background","className","style","react_router","exact","path","props","components_Login","render","components_Game","components_Menu","components_Instructions","components_Leaderboard","components_Results","Component","ReactDOM","react_router_dom","components_App","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.34174fa1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nconst Login = () => {\n    return <div>Login</div>;\n}\n\nexport default Login;   ","import React, { Component } from \"react\";\n\nconst Game = () => {\n    return <div>Game</div>;\n}\n\nexport default Game;","import React, { Component } from \"react\";\n\nconst Instructions = () => {\n    return <div>Instructions</div>;\n}\n\nexport default Instructions;\n\n","import React, { Component } from \"react\";\n\nconst Leaderboard = () => {\n    return <div>Leaderboard</div>;\n}\n\nexport default Leaderboard;\n","import React, { Component } from \"react\";\n\nconst Menu = () => {\n    return <div>Menu</div>;\n}\n\nexport default Menu;","import React, { Component } from \"react\";\n\n\nconst Results = () => {\n    return <div>Results</div>;\n}\n\nexport default Results;","import firebase from 'firebase';\n\nconst config = {\n    apiKey: \"AIzaSyCr6cQFXFwCYl7-ClBTIAK6H6MhS6XNkC8\",\n    authDomain: \"new-rpsls.firebaseapp.com\",\n    databaseURL: \"https://new-rpsls.firebaseio.com\",\n    projectId: \"new-rpsls\",\n    storageBucket: \"new-rpsls.appspot.com\",\n    messagingSenderId: \"783810961248\"\n};\nfirebase.initializeApp(config);\n\nexport default firebase;","import React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\n\nimport Login from './Login';\nimport Game from './Game';\nimport Instructions from './Instructions';\nimport Leaderboard from './Leaderboard';\nimport Menu from './Menu';\nimport Results from './Results';\n\nimport background from '../backgroundImage/background.png';\nimport options from '../utils/options';\nimport firebase from '../database/firebase/firebase';\nimport history from '../utils/history';\n\n\nconst dbRef = firebase.database().ref();\n\nclass App extends Component {\n    state = {\n        playerName: '',\n        playerNameReady: false,\n        tie: 0,\n        win: 0,\n        lose: 0,\n        id: '',\n        windowWidth: 0,\n        windowHeight: 0,\n        recoveryDataExists: false,\n    }\n\n    componentDidMount() {\n        this.updateWindow();\n        window.addEventListener(\"resize\", this.updateWindow);\n    }\n\n    updateWindow = () => {\n        this.setState({\n            windowWidth: window.innerWidth,\n            windowHeight: window.innerHeight\n        });\n    }\n\n    handleChange = (e, testValue) => {\n        this.setState({ [e.target.id]: e.target.value }, () => testValue());\n    }\n\n    checkForPlayerNameReady = () => {\n        if (\n            this.state.playerName !== \"Enter a nickname\"\n            && this.state.playerName !== \"\"\n            && this.state.playerName !== \" \"\n            && this.state.playerName !== \"  \"\n            && this.state.playerName !== \"   \"\n        ) {\n            this.setState({ playerNameReady: true });\n        } else {\n            this.setState({ playerNameReady: false });\n        }\n    }\n\n    handleNewPlayerFormSubmit = (e) => {\n        e.preventDefault();\n        this.addNewPlayerToFirebase();\n    }\n\n    addNewPlayerToFirebase = () => {\n        const newPlayer = {\n            name: this.state.playerName,\n            win: this.state.win,\n            lose: this.state.lose,\n            tie: this.state.tie\n        }\n        dbRef.push(newPlayer).then((snap) => {\n            this.setState({ id: snap.key });\n        });\n    }\n\n    updateFirebase = (type) => {\n        dbRef.child(this.state.id).child(type).set(this.state[type]);\n    }\n\n    updateCount = (type) => {\n        this.setState({ [type]: this.state[type] + 1 }, () => this.updateFirebase(type));\n    }\n\n    setRecoveryDataState = () => {\n        this.setState({ recoveryDataExists: true });\n    }\n\n    resetGame = () => {\n        this.setState({\n            playerName: '',\n            playerNameReady: false,\n            tie: 0,\n            win: 0,\n            lose: 0,\n            id: '',\n            recoveryDataExists: '',\n        });\n    }\n\n    render() {\n        const backgroundImg = {\n            backgroundImage: `linear-gradient(to bottom, rgba(205, 169, 157, 0.7), rgba(205, 169, 157, 0.7)), url(${background})`\n        }\n        return (\n            // <div>App</div>\n            <div className=\"app\" style={backgroundImg}>\n                <div className=\"appWrapper\">\n                    <Route exact path=\"/\" exact render={(props) => (\n                        <Login\n                            // history={history}\n                            // playerName={this.state.playerName}\n                            // playerNameReady={this.state.playerNameReady}\n                            // handleChange={this.handleChange}\n                            // handleNewPlayerFormSubmit={this.handleNewPlayerFormSubmit}\n                            // addNewPlayerToFirebase={this.addNewPlayerToFirebase}\n                            // checkForPlayerNameReady={this.checkForPlayerNameReady}\n                        />)}\n                    />\n                    <Route path=\"/game\" exact render={(props) => (\n                        <Game\n                            // history={history}\n                            // playerName={this.state.playerName}\n                            // updateCount={this.updateCount}\n                            // windowWidth={this.state.windowWidth}\n                            // windowHeight={this.state.windowHeight}\n                            // id={this.state.id}\n                            // setRecoveryDataState={this.setRecoveryDataState}\n                            // tie={this.state.tie}\n                            // win={this.state.win}\n                            // lose={this.state.lose}\n                            // recoveryDataExists={this.state.recoveryDataExists}\n\n                        />)}\n                    />\n                    <Route path=\"/menu\" exact render={(props) => (\n                        <Menu\n                            // recoverCurrentGameData={this.recoverCurrentGameData}\n                            // resetGame={this.resetGame}\n                        />)}\n                    />\n                    <Route path=\"/instructions\" exact render={(props) => (<Instructions />)} />\n                    <Route path=\"/leaderboard\" exact render={(props) => (<Leaderboard />)} />\n                    <Route path=\"/results\" exact render={(props) => (\n                        <Results\n                            // resetGame={this.resetGame}\n                            // tieCount={this.state.tie}\n                            // playerWinCount={this.state.win}\n                            // compWinCount={this.state.lose}\n                            // playerName={this.state.playerName}\n                            // history={history}\n                        />)}\n                    />\n                </div>\n            </div>\n        );\n    };\n}\n\n\nexport default App;","import { createBrowserHistory } from 'history';\nexport default createBrowserHistory();","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from \"react-router-dom\";\n\nimport App from './components/App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/background.ce8f19bd.png\";"],"sourceRoot":""}