{"version":3,"sources":["components/LinkButton.js","components/Login.js","components/Game.js","components/Instructions.js","components/Leaderboard.js","components/Menu.js","components/Results.js","database/firebase/firebase.js","utils/history.js","components/App.js","index.js","backgroundImage/background.png"],"names":["LinkButton","_ref","destination","message","_ref$action","action","customClass","react_default","a","createElement","className","concat","react_router_dom","to","onClick","Login","handleSubmit","e","_this","props","playerNameReady","handleNewPlayerFormSubmit","history","push","displayInvalidPlayerNameMessage","handleClick","addNewPlayerToFirebase","swal","_this2","this","onSubmit","htmlFor","type","id","value","playerName","onChange","handleChange","checkForPlayerNameReady","placeholder","components_LinkButton","Component","withRouter","Game","Instructions","Leaderboard","Menu","Results","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","createBrowserHistory","dbRef","database","ref","App","state","tie","win","lose","windowWidth","windowHeight","recoveryDataExists","updateWindow","setState","window","innerWidth","innerHeight","testValue","Object","defineProperty","target","preventDefault","newPlayer","name","then","snap","key","updateFirebase","child","set","updateCount","setRecoveryDataState","resetGame","addEventListener","_React$createElement","backgroundImg","backgroundImage","background","style","react_router","exact","path","components_Login","render","components_Game","components_Menu","components_Instructions","components_Leaderboard","components_Results","ReactDOM","components_App","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"uNAYeA,EARI,SAAAC,GAA0D,IAAvDC,EAAuDD,EAAvDC,YAAaC,EAA0CF,EAA1CE,QAA0CC,EAAAH,EAAjCI,cAAiC,IAAAD,EAAxB,KAAwBA,EAAlBE,EAAkBL,EAAlBK,YACvD,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,cAAAC,OAAgBL,IAC1BC,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMF,UAAU,iBAAiBG,GAAIX,EAAaY,QAAST,GAAUF,GAAWD,KCAtFa,6MAEFC,aAAe,SAACC,GACRC,EAAKC,MAAMC,iBACXF,EAAKC,MAAME,0BAA0BJ,GACrCC,EAAKC,MAAMG,QAAQC,KAAK,UAExBL,EAAKM,qCAIbC,YAAc,WACNP,EAAKC,MAAMC,gBACXF,EAAKC,MAAMO,yBAEXR,EAAKM,qCAIbA,gCAAkC,WAC9BG,IAAK,QAAS,kDAAmD,kFAK5D,IAAAC,EAAAC,KACL,OACItB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,2BAA2BL,OAAO,IAAIyB,SAAUD,KAAKb,cACjET,EAAAC,EAAAC,cAAA,SAAOC,UAAU,iBAAiBqB,QAAQ,cAA1C,+BACAxB,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kCAAkCsB,KAAK,OAAOC,GAAG,aAAaC,MAAOL,KAAKV,MAAMgB,WAAYC,SAAU,SAACnB,GAAD,OAAOW,EAAKT,MAAMkB,aAAapB,EAAGW,EAAKT,MAAMmB,0BAA0BC,YAAY,sBAE9MhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oCAAoCI,QAASe,KAAKJ,aAC7DlB,EAAAC,EAAAC,cAAC+B,EAAD,CAAYtC,YAAa2B,KAAKV,MAAMC,gBAAkB,OAAS,IAAKjB,QAAQ,eAEhFI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACXH,EAAAC,EAAAC,cAAC+B,EAAD,CAAYtC,YAAY,kBAE5BK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACXH,EAAAC,EAAAC,cAAC+B,EAAD,CAAYtC,YAAY,0BAzC5BuC,aAkDLC,cAAW3B,GCnDX4B,EAJF,WACT,OAAOpC,EAAAC,EAAAC,cAAA,oBCGImC,EAJM,WACjB,OAAOrC,EAAAC,EAAAC,cAAA,4BCGIoC,EAJK,WAChB,OAAOtC,EAAAC,EAAAC,cAAA,2BCGIqC,EAJF,WACT,OAAOvC,EAAAC,EAAAC,cAAA,oBCIIsC,EAJC,WACZ,OAAOxC,EAAAC,EAAAC,cAAA,yDCMXuC,IAASC,cARM,CACXC,OAAQ,0CACRC,WAAY,4BACZC,YAAa,mCACbC,UAAW,YACXC,cAAe,wBACfC,kBAAmB,iBAIRP,QAAf,SCXeQ,gBCgBTC,EAAQT,EAASU,WAAWC,MAkJnBC,6MA/IXC,MAAQ,CACJ1B,WAAY,GACZf,iBAAiB,EACjB0C,IAAK,EACLC,IAAK,EACLC,KAAM,EACN/B,GAAI,GACJgC,YAAa,EACbC,aAAc,EACdC,oBAAoB,KAQxBC,aAAe,WACXlD,EAAKmD,SAAS,CACVJ,YAAaK,OAAOC,WACpBL,aAAcI,OAAOE,iBAI7BnC,aAAe,SAACpB,EAAGwD,GACfvD,EAAKmD,SAALK,OAAAC,EAAA,EAAAD,CAAA,GAAiBzD,EAAE2D,OAAO3C,GAAKhB,EAAE2D,OAAO1C,OAAS,kBAAMuC,SAG3DnC,wBAA0B,WAEQ,qBAA1BpB,EAAK2C,MAAM1B,YACkB,KAA1BjB,EAAK2C,MAAM1B,YACe,MAA1BjB,EAAK2C,MAAM1B,YACe,OAA1BjB,EAAK2C,MAAM1B,YACe,QAA1BjB,EAAK2C,MAAM1B,WAEdjB,EAAKmD,SAAS,CAAEjD,iBAAiB,IAEjCF,EAAKmD,SAAS,CAAEjD,iBAAiB,OAIzCC,0BAA4B,SAACJ,GACzBA,EAAE4D,iBACF3D,EAAKQ,4BAGTA,uBAAyB,WACrB,IAAMoD,EAAY,CACdC,KAAM7D,EAAK2C,MAAM1B,WACjB4B,IAAK7C,EAAK2C,MAAME,IAChBC,KAAM9C,EAAK2C,MAAMG,KACjBF,IAAK5C,EAAK2C,MAAMC,KAEpBL,EAAMlC,KAAKuD,GAAWE,KAAK,SAACC,GACxB/D,EAAKmD,SAAS,CAAEpC,GAAIgD,EAAKC,WAIjCC,eAAiB,SAACnD,GACdyB,EAAM2B,MAAMlE,EAAK2C,MAAM5B,IAAImD,MAAMpD,GAAMqD,IAAInE,EAAK2C,MAAM7B,OAG1DsD,YAAc,SAACtD,GACXd,EAAKmD,SAALK,OAAAC,EAAA,EAAAD,CAAA,GAAiB1C,EAAOd,EAAK2C,MAAM7B,GAAQ,GAAK,kBAAMd,EAAKiE,eAAenD,QAG9EuD,qBAAuB,WACnBrE,EAAKmD,SAAS,CAAEF,oBAAoB,OAGxCqB,UAAY,WACRtE,EAAKmD,SAAS,CACVlC,WAAY,GACZf,iBAAiB,EACjB0C,IAAK,EACLC,IAAK,EACLC,KAAM,EACN/B,GAAI,GACJkC,mBAAoB,yFAlExBtC,KAAKuC,eACLE,OAAOmB,iBAAiB,SAAU5D,KAAKuC,+CAqElC,IAAAsB,EAAA9D,EAAAC,KACC8D,EAAgB,CAClBC,gBAAe,uFAAAjF,OAAyFkF,IAAzF,MAEnB,OAEItF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAMoF,MAAOH,GACxBpF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAACsF,EAAA,GAADL,EAAA,CAAOM,OAAK,EAACC,KAAK,KAAlBvB,OAAAC,EAAA,EAAAD,CAAAgB,EAAA,YAAAhB,OAAAC,EAAA,EAAAD,CAAAgB,EAAA,SAAoC,SAACvE,GAAD,OAChCZ,EAAAC,EAAAC,cAACyF,EAAD,CACI5E,QAASA,EACTa,WAAYP,EAAKiC,MAAM1B,WACvBf,gBAAiBQ,EAAKiC,MAAMzC,gBAC5BiB,aAAcT,EAAKS,aACnBhB,0BAA2BO,EAAKP,0BAChCK,uBAAwBE,EAAKF,uBAC7BY,wBAAyBV,EAAKU,4BARtCoD,IAWAnF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAOE,KAAK,QAAQD,OAAK,EAACG,OAAQ,SAAChF,GAAD,OAC9BZ,EAAAC,EAAAC,cAAC2F,EAAD,SAeJ7F,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAOE,KAAK,QAAQD,OAAK,EAACG,OAAQ,SAAChF,GAAD,OAC9BZ,EAAAC,EAAAC,cAAC4F,EAAD,SAKJ9F,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAOE,KAAK,gBAAgBD,OAAK,EAACG,OAAQ,SAAChF,GAAD,OAAYZ,EAAAC,EAAAC,cAAC6F,EAAD,SACtD/F,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAOE,KAAK,eAAeD,OAAK,EAACG,OAAQ,SAAChF,GAAD,OAAYZ,EAAAC,EAAAC,cAAC8F,EAAD,SACrDhG,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAOE,KAAK,WAAWD,OAAK,EAACG,OAAQ,SAAChF,GAAD,OACjCZ,EAAAC,EAAAC,cAAC+F,EAAD,kBAhIN/D,aCZlBgE,IAASN,OACL5F,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACIL,EAAAC,EAAAC,cAACiG,EAAD,OAERC,SAASC,eAAe,6BCXxBC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.b65979ef.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n//change - removed extra imports from rrd\nimport { Link } from \"react-router-dom\";\n\nconst LinkButton = ({ destination, message, action = null, customClass }) => {\n    return (\n        <div className={`linkButton ${customClass}`} >\n            <Link className=\"button__target\" to={destination} onClick={action} >{message || destination}</Link>\n        </div>\n    );\n};\n\nexport default LinkButton;","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link, Redirect, withRouter } from \"react-router-dom\";\nimport swal from 'sweetalert';\n\nimport LinkButton from './LinkButton';\n\n\nclass Login extends Component {\n\n    handleSubmit = (e) => {\n        if (this.props.playerNameReady) {\n            this.props.handleNewPlayerFormSubmit(e)\n            this.props.history.push('/game');\n        } else {\n            this.displayInvalidPlayerNameMessage();\n        }\n    }\n\n    handleClick = () => {\n        if (this.props.playerNameReady) {\n            this.props.addNewPlayerToFirebase();\n        } else {\n            this.displayInvalidPlayerNameMessage();\n        }\n    }\n\n    displayInvalidPlayerNameMessage = () => {\n        swal(\"Oops!\", \"Looks like you need to enter a valid Nick Name!\", \"error\");\n    }\n\n\n\n    render() {\n        return (\n            <div className=\"login\">\n                <h1>RPSLS</h1>\n                <form className=\"playerNameSubmissionForm\" action=\"#\" onSubmit={this.handleSubmit} >\n                    <label className=\"visuallyhidden\" htmlFor=\"playerName\">Please enter your nickname!</label>\n                    <input className=\"playerNameSubmissionForm__input\" type=\"text\" id=\"playerName\" value={this.props.playerName} onChange={(e) => this.props.handleChange(e, this.props.checkForPlayerNameReady)} placeholder=\"Enter a Nickname\" />\n                </form>\n                <div className=\"loginPageButtons\">\n                    <div className=\"loginPageButtons__buttonContainer\" onClick={this.handleClick}>\n                        <LinkButton destination={this.props.playerNameReady ? 'game' : '/'} message='Play Game' />\n                    </div>\n                    <div className=\"loginPageButtons__buttonContainer\">\n                        <LinkButton destination='instructions' />\n                    </div>\n                    <div className=\"loginPageButtons__buttonContainer\">\n                        <LinkButton destination='leaderboard' />\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n};\n\nexport default withRouter(Login);","import React, { Component } from \"react\";\n\nconst Game = () => {\n    return <div>Game</div>;\n}\n\nexport default Game;","import React, { Component } from \"react\";\n\nconst Instructions = () => {\n    return <div>Instructions</div>;\n}\n\nexport default Instructions;\n\n","import React, { Component } from \"react\";\n\nconst Leaderboard = () => {\n    return <div>Leaderboard</div>;\n}\n\nexport default Leaderboard;\n","import React, { Component } from \"react\";\n\nconst Menu = () => {\n    return <div>Menu</div>;\n}\n\nexport default Menu;","import React, { Component } from \"react\";\n\n\nconst Results = () => {\n    return <div>Results</div>;\n}\n\nexport default Results;","import firebase from 'firebase';\n\nconst config = {\n    apiKey: \"AIzaSyCr6cQFXFwCYl7-ClBTIAK6H6MhS6XNkC8\",\n    authDomain: \"new-rpsls.firebaseapp.com\",\n    databaseURL: \"https://new-rpsls.firebaseio.com\",\n    projectId: \"new-rpsls\",\n    storageBucket: \"new-rpsls.appspot.com\",\n    messagingSenderId: \"783810961248\"\n};\nfirebase.initializeApp(config);\n\nexport default firebase;","import { createBrowserHistory } from 'history';\nexport default createBrowserHistory();","import React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\n\nimport Login from './Login';\nimport Game from './Game';\nimport Instructions from './Instructions';\nimport Leaderboard from './Leaderboard';\nimport Menu from './Menu';\nimport Results from './Results';\n\nimport background from '../backgroundImage/background.png';\nimport options from '../utils/options';\nimport firebase from '../database/firebase/firebase';\nimport history from '../utils/history';\n\n\nconst dbRef = firebase.database().ref();\n\nclass App extends Component {\n    state = {\n        playerName: '',\n        playerNameReady: false,\n        tie: 0,\n        win: 0,\n        lose: 0,\n        id: '',\n        windowWidth: 0,\n        windowHeight: 0,\n        recoveryDataExists: false,\n    }\n\n    componentDidMount() {\n        this.updateWindow();\n        window.addEventListener(\"resize\", this.updateWindow);\n    }\n\n    updateWindow = () => {\n        this.setState({\n            windowWidth: window.innerWidth,\n            windowHeight: window.innerHeight\n        });\n    }\n\n    handleChange = (e, testValue) => {\n        this.setState({ [e.target.id]: e.target.value }, () => testValue());\n    }\n\n    checkForPlayerNameReady = () => {\n        if (\n            this.state.playerName !== \"Enter a nickname\"\n            && this.state.playerName !== \"\"\n            && this.state.playerName !== \" \"\n            && this.state.playerName !== \"  \"\n            && this.state.playerName !== \"   \"\n        ) {\n            this.setState({ playerNameReady: true });\n        } else {\n            this.setState({ playerNameReady: false });\n        }\n    }\n\n    handleNewPlayerFormSubmit = (e) => {\n        e.preventDefault();\n        this.addNewPlayerToFirebase();\n    }\n\n    addNewPlayerToFirebase = () => {\n        const newPlayer = {\n            name: this.state.playerName,\n            win: this.state.win,\n            lose: this.state.lose,\n            tie: this.state.tie\n        }\n        dbRef.push(newPlayer).then((snap) => {\n            this.setState({ id: snap.key });\n        });\n    }\n\n    updateFirebase = (type) => {\n        dbRef.child(this.state.id).child(type).set(this.state[type]);\n    }\n\n    updateCount = (type) => {\n        this.setState({ [type]: this.state[type] + 1 }, () => this.updateFirebase(type));\n    }\n\n    setRecoveryDataState = () => {\n        this.setState({ recoveryDataExists: true });\n    }\n\n    resetGame = () => {\n        this.setState({\n            playerName: '',\n            playerNameReady: false,\n            tie: 0,\n            win: 0,\n            lose: 0,\n            id: '',\n            recoveryDataExists: '',\n        });\n    }\n\n    render() {\n        const backgroundImg = {\n            backgroundImage: `linear-gradient(to bottom, rgba(205, 169, 157, 0.7), rgba(205, 169, 157, 0.7)), url(${background})`\n        }\n        return (\n            // <div>App</div>\n            <div className=\"app\" style={backgroundImg}>\n                <div className=\"appWrapper\">\n                    <Route exact path=\"/\" exact render={(props) => (\n                        <Login\n                            history={history}\n                            playerName={this.state.playerName}\n                            playerNameReady={this.state.playerNameReady}\n                            handleChange={this.handleChange}\n                            handleNewPlayerFormSubmit={this.handleNewPlayerFormSubmit}\n                            addNewPlayerToFirebase={this.addNewPlayerToFirebase}\n                            checkForPlayerNameReady={this.checkForPlayerNameReady}\n                        />)}\n                    />\n                    <Route path=\"/game\" exact render={(props) => (\n                        <Game\n                            // history={history}\n                            // playerName={this.state.playerName}\n                            // updateCount={this.updateCount}\n                            // windowWidth={this.state.windowWidth}\n                            // windowHeight={this.state.windowHeight}\n                            // id={this.state.id}\n                            // setRecoveryDataState={this.setRecoveryDataState}\n                            // tie={this.state.tie}\n                            // win={this.state.win}\n                            // lose={this.state.lose}\n                            // recoveryDataExists={this.state.recoveryDataExists}\n\n                        />)}\n                    />\n                    <Route path=\"/menu\" exact render={(props) => (\n                        <Menu\n                            // recoverCurrentGameData={this.recoverCurrentGameData}\n                            // resetGame={this.resetGame}\n                        />)}\n                    />\n                    <Route path=\"/instructions\" exact render={(props) => (<Instructions />)} />\n                    <Route path=\"/leaderboard\" exact render={(props) => (<Leaderboard />)} />\n                    <Route path=\"/results\" exact render={(props) => (\n                        <Results\n                            // resetGame={this.resetGame}\n                            // tieCount={this.state.tie}\n                            // playerWinCount={this.state.win}\n                            // compWinCount={this.state.lose}\n                            // playerName={this.state.playerName}\n                            // history={history}\n                        />)}\n                    />\n                </div>\n            </div>\n        );\n    };\n}\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from \"react-router-dom\";\n\nimport App from './components/App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/background.ce8f19bd.png\";"],"sourceRoot":""}